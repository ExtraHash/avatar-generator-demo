{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","avatar","vexAvatarFromUUID","uuid","console","log","className","src","alt","onClick","avatarSrc","element","document","createElement","setAttribute","style","display","body","appendChild","click","removeChild","download","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"8PAqBeA,MAhBf,WACE,IAAMC,EAASC,4BAAkBC,OAGjC,OAFAC,QAAQC,IAAIJ,GAGV,qBAAKK,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKN,EAAQK,UAAU,WAAWE,IAAI,SAC3C,uBACA,uBACA,wBAAQC,QAAS,YAQzB,SAAkBC,GAChB,IAAIC,EAAUC,SAASC,cAAc,KACrCF,EAAQG,aAAa,OAAQJ,GAC7BC,EAAQG,aAAa,WAAY,cAEjCH,EAAQI,MAAMC,QAAU,OACxBJ,SAASK,KAAKC,YAAYP,GAE1BA,EAAQQ,QAERP,SAASK,KAAKG,YAAYT,GAlBKU,CAASpB,IAAlC,4BCbR,IAYeqB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrB,SAASsB,eAAe,SAM1BZ,M","file":"static/js/main.477dc536.chunk.js","sourcesContent":["import './App.css';\n\nimport { vexAvatarFromUUID } from \"@vex-chat/avatar-generator\";\nimport * as uuid from \"uuid\";\n\nfunction App() {\n  const avatar = vexAvatarFromUUID(uuid.v4())\n  console.log(avatar);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={avatar} className=\"App-logo\" alt=\"logo\" />\n        <br />\n        <br />\n        <button onClick={() => { download(avatar) }}>Download</button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n\nfunction download(avatarSrc: string) {\n  var element = document.createElement(\"a\");\n  element.setAttribute(\"href\", avatarSrc);\n  element.setAttribute(\"download\", \"avatar.svg\");\n\n  element.style.display = \"none\";\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}